buildscript {
    dependencies {
        classpath 'de.guntram.mcmod:crowdin-translate:1.4+1.19-pre2'
    }
    repositories {
        maven {
            name = 'CrowdinTranslate source'
            url = "https://minecraft.guntram.de/maven/"
        }
    }
}

plugins {
    id 'fabric-loom' version '1.2-SNAPSHOT'
	id "com.modrinth.minotaur" version "2.+"
	id "com.matthewprenger.cursegradle" version "1.4.0"
}

apply plugin: 'de.guntram.mcmod.crowdin-translate'
crowdintranslate.crowdinProjectName = 'easierchests'

repositories {
    maven {
        url = "file://tmp/mymavenrepo/"
    }
	maven {
            name = "Fabric API"
            url = "https://maven.fabricmc.net/"
	}
	maven {
            name = "GBFabricTools, CrowdinTranslate"
            url = "https://minecraft.guntram.de/maven/"
	}
	maven {
            name = "ModMenu"
            url = "https://maven.terraformersmc.com/releases/"
	}
    maven {
        name = "Reinforced Core"
        url "https://raw.githubusercontent.com/Aton-Kish/mcmod/maven"
    }
    maven { url "https://maven.shedaniel.me/" }
}

sourceCompatibility = 17
targetCompatibility = 17

ext.Versions = new Properties()
Versions.load(file("Versionfiles/mcversion-1.20.properties").newReader())

archivesBaseName = "easierchests"
ext.projectVersion = "1.7.1"

version = "${Versions['minecraft_version']}-fabric${Versions['fabric_versiononly']}-${project.projectVersion}"

loom {
        mixin.defaultRefmapName = "EasierChests-refmap.json";
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

dependencies {
    minecraft  "com.mojang:minecraft:${Versions['minecraft_version']}"
    mappings   "net.fabricmc:yarn:${Versions['yarn_mappings']}:v2"
    modImplementation "net.fabricmc:fabric-loader:${Versions['loader_version']}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${Versions['fabric_version']}"
    modImplementation "com.terraformersmc:modmenu:${Versions['modmenu_version']}"
    modImplementation "de.guntram.mcmod:GBfabrictools:${Versions['gbfabrictools_version']}"
    include    "de.guntram.mcmod:GBfabrictools:${Versions['gbfabrictools_version']}"
    modImplementation "de.guntram.mcmod:crowdin-translate:${Versions['crowdintranslate_version']}"
    include "de.guntram.mcmod:crowdin-translate:${Versions['crowdintranslate_version']}"
    
    modImplementation "atonkish.reinfcore:reinforced-core:1.1.0"
    compileOnly files('/home/gbl/SoftwareProjects/GitClones/MinecraftMods/inmis/build/libs/inmis-2.3.2-1.17.1-dev.jar');
    compileOnly files('/home/gbl/SoftwareProjects/GitClones/MinecraftMods/container-library/build/fabric/libs/ninjaphenix-container-library-1.2.2+1.17.1-dev.jar');
}

java {
    withSourcesJar()
}

jar {
	from "LICENSE"
}

processResources {
        dependsOn downloadTranslations
}

import com.modrinth.minotaur.TaskModrinthUpload

modrinth {
    projectId = 'easierchests'
    versionName = project.archivesBaseName
    uploadFile = remapJar
}

curseforge {
    apiKey = System.getenv("CURSEFORGE_TOKEN") ?: "0"
    project {
        id = '279501'
        releaseType = 'release'
        addGameVersion("${Versions['minecraft_version']}")
        addGameVersion("Java "+targetCompatibility)
        addGameVersion("Fabric")
        mainArtifact(remapJar)
    }
    options {
        forgeGradleIntegration = false
    }
}
